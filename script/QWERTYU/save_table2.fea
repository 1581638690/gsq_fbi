#FEA脚本文件

#保存语句
#@data_key  表结构
#@link 链接
#@table 表名

#构建唯一工作区，处理并发
use @FID

#获取表单数据
a = load ssdb by ssdb0 with @data_key
t = @udf a by udf0.df_copy_index
t = @udf t by udf0.df_reset_index
classtype= eval t by (get_value(0,'classtype'))
ida= eval t by (get_value(0,'sid'))
b=@udf RS.exec_mysql_sql with (@link,select sid,source,destination,sport,dport,priority,gmt_modified,enable,classtype from @table where sid!='$ida')
b=filter b by classtype=='$classtype'
a=loc a by drop sid
c=union (a,b)
c=@udf c by udf0.df_reset_index
c=@udf c by ABC.judge
assert find_df_have_data('c',ptree) as break with 编辑失败，已有重复规则
#获取当前用户信息
#a1 = @udf udfA.get_user
#合并信息
#a = join a,a1 by index
#保存
a=loc a by drop cindex
b = @udf a by CRUD.save_table with (@link,@table)
assert find_df('b',ptree) as  alert  to 保存成功！ with 保存失败！

#返回结果
id = eval b by index[0]
d = @udf CRUD.get_object_table with (@link,@table,$id)
#store b to ssdb by ssdb0 with @table:query:@FPS as 600
push d as table

b = @udf RS.load_mysql_sql with (@link,select * from eventManagement where enable!='0')
temp=loc b by sid,source,destination,sport,dport,priority,gmt_modified,enable,classtype
store temp to csv by sjgl.csv
#停止服务
s = @udf FBI.local_cmd with /opt/openfbi/fbi-bin/kill_pname.sh znsm/eve

#保存配置文件
a = load ssdb by ssdb0 with znsm:logger:config
store a to ssdb with znsm:logger:config

#生成参数
a.kfkconfig = lambda row by  x: "kfk={} topic={}".format(x["kfk_addr"],x["kfk_topic"]) if  x["kfk_addr"]!="" and x["kfk_topic"]!="" else ""
a.esconfig = lambda row by  x: "es={} table={}".format(x["es_addr"],x["es_index"]) if  x["es_addr"]!="" and x["es_index"]!="" else ""
a.syslogconfig = lambda row by  x: "{}={}".format(x["syslog_type"],x["syslog_addr"]) if  x["syslog_addr"]!="" and x["syslog_type"]!="0" else ""


#重启日志服务
kfk_config = eval a by loc[0,"kfkconfig"] 
es_config = eval a by loc[0,"esconfig"] 
syslog_config = eval a by loc[0,"syslogconfig"] 

s = @udf FBI.local_cmd with /opt/openfbi/fbi-bin/addones/json_out.py files=/data/znsm/eve* $kfk_config $es_config $syslog_config -D


assert find_df('s',ptree) as altert to 保存成功 with 保存失败！
#清除工作区
clear @FID
