#LastModifyDate:　2024-03-08T15:10:52    Author:   zwl
#LastModifyDate:　2024-01-20T16:02:31    Author:   zwl
#LastModifyDate:　2023-09-13T16:45:03.291330    Author:   zwl
#LastModifyDate:　2023-08-23T17:13:28.323505    Author:   zwl
#LastModifyDate:　2023-08-01T17:02:37.206358    Author:   zwl
#LastModifyDate:　2023-07-25T16:22:24.002833    Author:   zwl
#LastModifyDate:　2023-07-22T15:25:23.931163    Author:   zwl
#LastModifyDate:　2023-06-13T14:16:39.910683    Author:   zwl
#LastModifyDate:　2023-06-05T14:02:46.348611    Author:   zwl
#LastModifyDate:　2023-05-04T16:58:23.669747    Author:   zwl
#LastModifyDate:　2023-04-14T15:41:22.045105    Author:   zwl
#FBI脚本文件
#文件名: qh_ip_1.fbi
#作者: qiaohan
#整合脚本-确保数据准确

use @FID

#####数据库未连接 或 无数据
ccc = load ckh by ckh with select app from api_hx limit 1
assert find_df_have_data('ccc',ptree) as exit with 数据库未连接 或者 无数据更新！

##断点取数据的时间区间
aa = load ssdb by ssdb0 with srcip_hx
##判断key是否为空，若为空，api_hx
a_num = eval aa by index.size
if $a_num == 0 with aa = load ckh by ckh with select min(time) as time from api_hx
#aa = load ckh by ckh with select min(time) as time from api_hx
time1 = eval aa by iloc[0,0]
##取已有数据的最大值
aa = load ckh by ckh with select max(time) as time from api_hx
time2 = eval aa by iloc[0,0]
store aa to ssdb by ssdb0 with srcip_hx

#月时间
month1 = @sdf sys_now with -1m
month = @sdf format_now with ($month1,"%Y-%m-%dT00:00:00")
month1 = @sdf format_now with ($month1,"%Y-%m-%d")
month2 = @sdf sys_now 
month2 = @sdf format_now with ($month2,"%Y-%m-%d")
time_date = @udf udf0.new_df_timerange with ($month1,$month2,1D)
time_date = loc time_date by end_time 
time_date.end_time = lambda end_time by (x:x[5:10])
time_date = loc time_date by end_time to index

#周热力图
day = @sdf sys_now with -1w
week = @sdf format_now with ($day,"%Y-%m-%dT00:00:00")
day1 = @sdf sys_now with -6d
week1 = @sdf format_now with ($day1,"%Y-%m-%d 00:00:00")
day2 = @sdf sys_now
week2 = @sdf format_now with ($day2,"%Y-%m-%d %H:00:00")
time_d = @udf udf0.new_df_timerange with ($week1,$week2,1H)
time_d.times = lambda start_time by (x:x[5:10])
time_d.time2 = lambda start_time by (x:x[11:13])
time_d = loc time_d by times,time2

##近24小时
day = @sdf sys_now with -1d
day2 = @sdf sys_now 
day1 = @sdf format_now with ($day,"%Y-%m-%d %H:00:00")
day2 = @sdf format_now with ($day2,"%Y-%m-%d %H:00:00")
j_hour = @udf udf0.new_df_timerange with ($day1,$day2,1H)
j_hour.times = lambda end_time by (x:x[0:13])
j_hour = loc j_hour by times

## 取与终端管理 同一个表的数据
srciplist1 = load db by mysql1 with select srcip from data_ip_new where portrait_status = 1
alter srciplist1 by srcip:str
###11-4优化
###取月流量数据
mon_ll = load ckh by ckh with select srcip,SUBSTRING(toString(time),6,5) as times,sum(visit_num) as time_count,sum(visit_flow) as llk from api_hx where time > '$month' group by srcip,times order by times desc
alter mon_ll by srcip:str,times:str,time_count:int,llk:int
mon_ll.llk = lambda llk by (x:round(x/1024,2))
mon_ll = order mon_ll by times with asc
###清单
visit_url = load ckh by ckh with select srcip,url,sum(visit_num) as url_num,sum(visit_flow) as flow from api_hx where time >= '$time1' and time < '$time2' group by srcip,url
alter visit_url by srcip:str,url:str,url_num:int,flow:int
visit_dstip = load ckh by ckh with select srcip,dstip,sum(visit_num) as dstip_num from api_hx where time >= '$time1' and time < '$time2' group by srcip,dstip
alter visit_dstip by srcip:str,dstip:str,dstip_num:int
visit_app = load ckh by ckh with select srcip,app,sum(visit_num) as app_num from api_hx where time >= '$time1' and time < '$time2' group by srcip,app
alter visit_app by srcip:str,app:str,app_num:int
visit_account = load ckh by ckh with select srcip,account,sum(visit_num) as account_num from api_hx where time >= '$time1' and time < '$time2' and account != '' and account != '未知' group by srcip,account
alter visit_account by srcip:str,account:str,account:int
data_api_new = load db by mysql1 with select distinct url,api_type from data_api_new
data_api_new = @udf data_api_new by udf0.df_fillna_cols with url:'',api_type:0
alter data_api_new by url:str,api_type:int
alter data_api_new.api_type as str
api_type = load ssdb with dd:API-api_type
api_type = @udf data_api_new,api_type by SP.tag2dict with api_type
api_type.api_type = lambda api_type by (x:x+',')
api_type = group api_type by url agg api_type:sum
api_type = loc api_type by index to url
api_type.api_type = lambda api_type_sum by (x:x[:-1])
visit_url = join visit_url,api_type by url,url with left
rename visit_url as ('api_type':'value')
visit_url = loc visit_url by srcip,url,url_num,flow,value
visit_url = @udf visit_url by udf0.df_fillna_cols with srcip:'',url:'',url_num:0,flow:0,value:''
drop api_type
drop data_api_new
###周热力图
week_ll = load ckh by ckh with select srcip,SUBSTRING(toString(time),6,8) as times,sum(visit_num) as time_count,sum(visit_flow) as llk from api_hx where time >'$week' group by srcip,times 
alter week_ll by srcip:str,times:str,time_count:int,llk:int
week_ll.llk = lambda llk by (x:round(x/1024,2))
week_ll = order week_ll by times with asc
###24小时平均访问趋势
ip_24 = load ckh by ckh with select srcip,SUBSTRING(toString(time),1,13) as times,sum(visit_num) as count from api_hx where time > '$day1' group by srcip,times
alter ip_24 by srcip:str,times:str,count:int

foreach srciplist1 run """
	##24小时平均访问次数  ------------------------------------------------------------------------------
	ip24 = filter ip_24 by srcip == '@srcip'
	#ip24 = filter ip_24 by srcip == '150.15.134.40'
	ip24 = join j_hour,ip24 by times,times with left
	ip24 = @udf ip24 by udf0.df_fillna_cols with count:0
	ip24.times = lambda times by (x:x[11:])
	ip24.times = lambda times by (x:x+'时')
	ip24 = loc ip24 by times to index 
	ip24 = loc ip24 by count
	rename ip24 as ('count':'每小时访问次数')
	store ip24 to ssdb by ssdb0 with z:@srcip:time_24
	##月流量趋势  ------------------------------------------------------------------------------
	v1 = filter mon_ll by srcip == '@srcip'
	v1 = loc v1 by times to index
	ss = join v1,time_date by index,index with right
	ss = loc ss by (time_count,llk)
	ss = @udf ss by udf0.df_fillna_cols with time_count:0,llk:0
	ss_mean = loc ss by time_count,llk
	ss_mean = add ss by 1
	ss_mean = group ss_mean by ss agg time_count:mean,llk:mean
	time_count_mean = eval ss_mean by iloc[0,0]
	if $time_count_mean > 10000 with ss.time_count = lambda time_count by (x:round(x/10000,2))
	if $time_count_mean > 10000 with rename ss by ("time_count":"访问数量(万)")
	if $time_count_mean <= 10000 with rename ss by ("time_count":"访问数量")
	llk_mean = eval ss_mean by iloc[0,1]
	if $llk_mean <= 1024 with ss.llk = lambda llk by (x:x)
	if 1024 < $llk_mean <= 1048576  with ss.llk = lambda llk by (x:round(x/1024,2))
	if $llk_mean > 1048576 with ss.llk = lambda llk by (x:round(x/1048576,2))
	if $llk_mean <= 1024 with rename ss by ("llk":"流量(B)")
	if 1024 < $llk_mean <= 1048576  with rename ss by ("llk":"流量(k)")
	if $llk_mean > 1048576 with rename ss by ("llk":"流量(M)")
	store ss to ssdb with ip:@srcip:timeh
	#IP清单  ------------------------------------------------------------------------------
	ipls = filter visit_dstip by srcip == '@srcip'
	ipls_ll = load pq by dt_table/ip_visit_dstip1_@srcip.pq
	ipls = union ipls,ipls_ll
	ipls = group ipls by srcip,dstip agg dstip_num:sum
	ipls = @udf ipls by udf0.df_reset_index
	rename ipls as ('dstip_num_sum':'dstip_num')
	##动态表格
	visit_dstip1 = loc ipls by srcip,dstip,dstip_num
	visit_dstip1 = order visit_dstip1 by dstip_num with desc limit 1000
	#保存为pq文件
	store visit_dstip1 to pq by dt_table/ip_visit_dstip1_@srcip.pq
	#重命名
	rename visit_dstip1 as ("srcip":"终端IP","dstip":"目的IP","dstip_num":"访问数量")
	#清空Q
	b = load ssdb by ssdb0 query qclear,ip_visit_dstip1_@srcip,-,-
	#保存Q
	store visit_dstip1 to ssdb by ssdb0 with ip_visit_dstip1_@srcip as Q
	drop visit_dstip1
	##清单
	ipls = loc ipls by dstip,dstip_num
	ipls = order ipls by dstip_num with desc limit 10
	rename ipls by ("dstip":"访问应用IP",'dstip_num':'数量')
	store ipls to ssdb with ip:@srcip:ipls
	#访问应用清单  ------------------------------------------------------------------------------
	appls = filter visit_app by srcip == '@srcip'
	appls_ll = load pq by dt_table/ip_visit_app1_@srcip.pq
	appls = union appls,appls_ll
	appls = group appls by srcip,app agg app_num:sum
	appls = @udf appls by udf0.df_reset_index
	rename appls as ('app_num_sum':'app_num')
	##数量
	appls_count = @udf appls by udf0.df_count
	appls_count = add index by ("访问应用数量")
	appls_count = loc appls_count by index to index
	store appls_count to ssdb with ip:@srcip:appls_count
	##动态表格
	visit_app1 = loc appls by srcip,app,app_num
	visit_app1 = order visit_app1 by app_num with desc limit 1000
	#保存为pq文件
	store visit_app1 to pq by dt_table/ip_visit_app1_@srcip.pq
	#重命名
	rename visit_app1 as ("srcip":"终端IP","app":"应用IP/域名","app_num":"访问数量")
	#清空Q
	b = load ssdb by ssdb0 query qclear,ip_visit_app1_@srcip,-,-
	#保存Q
	store visit_app1 to ssdb by ssdb0 with ip_visit_app1_@srcip as Q
	drop visit_app1
	##清单
	appls = loc appls by app,app_num
	appls = order appls by app_num with desc limit 10
	rename appls by ("app":"访问应用",'app_num':'访问数量')
	store appls to ssdb with ip:@srcip:appls
	#访问接口清单  ------------------------------------------------------------------------------
	urlls = filter visit_url by srcip == '@srcip'
	#urlls = filter visit_url by srcip == '10.0.1.213'
	urlls_ll = load pq by dt_table/ip_visit_url1_@srcip.pq
	urlls = union urlls,urlls_ll
	urlls = group urlls by srcip,url,value agg url_num:sum,flow:sum
	urlls = @udf urlls by udf0.df_reset_index
	rename urlls as ('url_num_sum':'url_num','flow_sum':'flow')
	##动态表格
	visit_url1 = loc urlls by srcip,url,url_num,flow,value
	visit_url1.flow = lambda flow by (x:round(x/1024,2))
	visit_url1 = order visit_url1 by url_num with desc limit 1000
	#保存为pq文件
	store visit_url1 to pq by dt_table/ip_visit_url1_@srcip.pq
	#重命名
	rename visit_url1 as ("srcip":"终端IP","url":"接口","url_num":"访问数量","flow":"访问流量(k)","value":"接口类型")
	#清空Q
	b = load ssdb by ssdb0 query qclear,ip_visit_url1_@srcip,-,-
	#保存Q
	store visit_url1 to ssdb by ssdb0 with ip_visit_url1_@srcip as Q
	drop visit_url1
	###清单
	urlls = loc urlls by url,url_num,flow,value
	urlls = order urlls by url_num with desc limit 10
	urlls_num = loc urlls by flow 
	urlls_num = add aa by 1
	urlls_num = group urlls_num by aa agg flow:mean
	if urlls.index.size != 0 with ff_num = eval urlls_num by iloc[0,0]
	if urlls.index.size == 0 with ff_num = @sdf sys_define with (0)
	if $ff_num <= 1024 with urlls.flow = lambda flow by (x:x)
	if 1024 < $ff_num <= 1048576  with urlls.flow = lambda flow by (x:round(x/1024,2))
	if $ff_num > 1048576 with urlls.flow = lambda flow by (x:round(x/1048576,2))
	urlls = @udf urlls by udf0.df_fillna_cols with url:'',url_num:0,flow:0,value:''
	alter urlls by flow:str
	if $ff_num <= 1024 with rename urlls by ("url":"访问接口","url_num":"访问次数","flow":"访问流量(B)","value":"接口类型")
	if 1024 < $ff_num <= 1048576  with rename urlls by ("url":"访问接口","url_num":"访问次数","flow":"访问流量(k)","value":"接口类型")
	if $ff_num > 1048576 with rename urlls by ("url":"访问接口","url_num":"访问次数","flow":"访问流量(M)","value":"接口类型")
	alter urlls.访问接口.访问次数.访问流量(M).接口类型 as str
	urlls = @udf urlls by VL.set_col_width with (850,140,180,180)
	urlls = @udf urlls by VL.set_col_color with (#000,#000,#000,#000)
	store urlls to ssdb with ip:@srcip:urlls
	#关联账号——登录了哪个账号  ------------------------------------------------------------------------------
	accountip = filter visit_account by srcip == '@srcip'
	accountip_ll = load pq by dt_table/ip_visit_account1_@srcip.pq
	accountip = union accountip,accountip_ll
	accountip = group accountip by srcip,account agg account_num:sum
	accountip = @udf accountip by udf0.df_reset_index
	rename accountip as ('account_num_sum':'account_num')
	##数量
	account_count = @udf accountip by udf0.df_count
	account_count = add index by ("使用账号数量")
	account_count = loc account_count by index to index
	store account_count to ssdb with ip:@srcip:account_count
	##动态表格
	visit_account1 = loc accountip by srcip,account,account_num
	visit_account1 = order visit_account1 by account_num with desc limit 1000
	#保存为pq文件
	store visit_account1 to pq by dt_table/ip_visit_account1_@srcip.pq
	#重命名
	rename visit_account1 as ("srcip":"终端IP","account":"账号","account_num":"访问数量")
	#清空Q
	b = load ssdb by ssdb0 query qclear,ip_visit_account1_@srcip,-,-
	#保存Q
	store visit_account1 to ssdb by ssdb0 with ip_visit_account1_@srcip as Q
	drop visit_account1
	##清单
	accountip = loc accountip by account,account_num
	accountip = order accountip by account_num with desc limit 10
	rename accountip by ("account":"使用账号",'account_num':'访问数量')
	store accountip to ssdb with ip:@srcip:accountls
	#周热力图  ------------------------------------------------------------------------------
	v2 = filter week_ll by srcip == '@srcip'
	#v2 = filter week_ll by srcip == '192.168.2.107'
	v2 = loc v2 by times,time_count
	v2 = add time2 by v2["times"]
	v2.time2 = str time2 by (slice(6,8))
	v2.times = str times by (slice(0,5))
	vv = join v2,time_d by [times,time2],[times,time2] with outer
	vv = @udf vv by udf0.df_fillna_cols with time_count:0
	vv = group vv by (times,time2) agg time_count:sum
	vv = @udf vv by udf0.df_unstack with time_count_sum
	vv = @udf vv by udf0.df_fillna with 0
	vv = @udf vv by udf0.df_sort_index
	store vv to ssdb by ssdb0 with ipweek:@srcip
""" with (srcip=$1)

clear @FID