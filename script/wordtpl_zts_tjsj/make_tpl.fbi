#LastModifyDate:　2024-01-18T10:40:03    Author:   superFBI
#LastModifyDate:　2023-04-11T10:14:02.156288    Author:   zwl
#LastModifyDate:　2023-04-10T11:13:41.153501    Author:   zwl
#LastModifyDate:　2022-11-04T14:32:34.606802    Author:   hs
#LastModifyDate:　2022-10-27T14:57:49.591321    Author:   hs
#LastModifyDate:　2022-10-22T10:52:21.548037    Author:   gjw
#LastModifyDate:　2022-10-21T13:26:35.336937    Author:   gjw
#LastModifyDate:　2022-10-21T12:27:38.391327    Author:   gjw
#LastModifyDate:　2022-10-21T12:01:35.197182    Author:   gjw
#LastModifyDate:　2022-10-21T11:50:24.492888    Author:   gjw
#LastModifyDate:　2022-07-28T17:34:29.721873    Author:   liuhouqi
#FBI生成docx文档脚本文件
#@vars 模板文档里面变量的前缀，比如{{info.name}}变量,vars就是info
#@var_keys代表变量的值对应的df表的key，比如name
#@id 模板填充好生成的文件目录位置，目录为workspace/temp_word/@id
#@table_vars,docx模板文件的table里面变量名
#@table_keys,存储表格数据的key
#@tpl_name,生成模板保存的文件名前缀
#例子
#run word_temp/make_tpl.fbi with (@id=wly,@base=base_exam,@vars=t1|t2,@var_keys=exam_t1|exam_t2,@table_vars=alerts,@table_keys=table_exam,@pics_data=pic_data)
#生成文档
#@udf doc.modifiy_doc with (@id,@vars,@var_keys,@table_vars,@table_keys,@tpl_name)
use @FID
######################################################基本变量信息(根据实际情况修改)###############################################
#获取表单数据
a = load ssdb by ssdb0 with @data_key
# 测试
#store a to ssdb with fwdsdq11


now = @sdf sys_now
now = @sdf format_now with ($now,"%Y-%m-%dT%H:%M:%S")

#先判断报告名称是否为空
if "@report_name".strip() in ["","undefined"] with """
	set param by define as report_name with @zh-$now
""" else """
	set param by define as report_name with @report_name-$now
"""

a = add name by  ('@report_name')

#生成报告记录
#保存
b = @udf a by CRUD.save_table with (@link,@table)
assert True as notice to @report_name 报告开始生成! with 报告生成发现错误!

##################################

#zts_sja = @udf RS.load_mysql_sql with (mysql1,select uuid from middle_biao)
#app = eval zts_sja by iloc[0,0]

# 测试
#a = load ssdb by ssdb0 with fwdsdq

app = eval a by loc[0,'IP']

####################################
zts_sj1 = @udf RS.load_mysql_sql with (mysql1,SELECT '$app' as 'name' ,count(*) as 'jk' from data_api_new where app = '$app')
zts_sj2 = @udf RS.load_mysql_sql with (mysql1,SELECT '$app' as 'name' ,count(*) as 'xsjjk' from data_api_new where app = '$app' and api_status=1)
#Delete 注释 by liuhouqi on 2022-07-28 17:21:45
#zts_sj3 = @udf RS.load_mysql_sql with (mysql1,SELECT '$app' as 'name',count(distinct url) as 'ysjjk',count(*) as 'sjfw',count(distinct api_type) as 'sjlx' from monitor_data where app = '$app' group by app)
#zts_sj4 = @udf RS.load_mysql_sql with (mysql1,SELECT '$app' as 'name',max(time) as time_max,min(time) as time_min,LEFT(NOW(),10) as 'time' from monitor_data where app = '$app')
#
zts_sj3 = load ckh by ckh with SELECT '$app' as name,count(distinct url) as ysjjk,count(*) as sjfw,count(distinct api_type) as sjlx from api_monitor where app = '$app'
zts_sj4 = load ckh by ckh with SELECT '$app' as name,max(time) as time_max,min(time) as time_min,formatDateTime(now(),'%Y-%m-%d') as time from api_monitor where app = '$app'

zts_sj0 = join zts_sj1,zts_sj2 by name,name
zts_sj0 = join zts_sj0,zts_sj3 by name,name
zts_sj0 = join zts_sj0,zts_sj4 by name,name
zts_sj0 = @udf zts_sj0 by udf0.df_fillna with (0)
store zts_sj0 to ssdb by ssdb0 with zts_sj0


##########################################################图表数据(根据实际情况修改)####################################################
#事件类型统计审计记录
zts_s1 =load ckh by ckh with SELECT api_type as sjlx,count(distinct url) as sjjk,count(*) as sjfw from api_monitor where app = '$app' group by api_type
alter zts_s1 by sjlx:str
zts_s1 = @udf zts_s1 by udf0.df_replace with (0,普通)
zts_s1 = @udf zts_s1 by udf0.df_replace with (1,登录)
zts_s1 = @udf zts_s1 by udf0.df_replace with (2,敏感数据)
zts_s1 = @udf zts_s1 by udf0.df_replace with (3,文件上传)
zts_s1 = @udf zts_s1 by udf0.df_replace with (4,文件下载)
zts_s1 = @udf zts_s1 by udf0.df_replace with (5,服务接口)
zts_s1 = @udf zts_s1 by udf0.df_replace with (6,数据库操作)
zts_s1 = @udf zts_s1 by udf0.df_replace with (7,命令操作)
zts_s1 = @udf zts_s1 by udf0.df_replace with (8,注销)
zts_s1 = rename zts_s1 by ("sjlx":"事件类型","sjjk":"已审计接口","sjfw":"审计记录")
zts_s1 = loc zts_s1 by index to 序号
store zts_s1 to ssdb by ssdb0 with zts_s1
zts_s2 = loc zts_s1 by 事件类型,审计记录
zts_s2 = @udf zts_s2 by udf0.df_set_index with (事件类型)
store zts_s2 to ssdb by ssdb0 with zts_s2

################################################################表格数据 (根据实际情况修改)#########################################################
#zts_s3 = @udf RS.load_mysql_sql with (mysql1,SELECT url,count(*) as 'mun',sum(case when risk_level = 2 then 1 else 0 end) as 'risk_num' from monitor_data where app = '$app' group by url order by mun desc limit 10)
zts_s3 = load ckh by ckh with select url,count(*) as mun,sum(case when risk_level = '2' then 1 else 0 end) as risk_num from api_monitor where app = '$app' group by url order by mun limit 10

zts_s3 = rename zts_s3 by ("url":"接口名","mun":"审计记录","risk_num":"高风险记录")
zts_s3 = loc zts_s3 by index to 序号
#zts_s3 = alter zts_s3.高风险记录 as int
alter zts_s3 by 高风险记录:str
store zts_s3 to ssdb by ssdb0 with zts_s3
###############################################################################统计报表状态###############################################################################
today = @sdf sys_now
today = @sdf sys_str with ($today,[0:10])
report0 = load ssdb by ssdb0 with zts_audit_report
report=@udf udf0.new_df with name,time,type
report = @udf report by udf0.df_append with (@report_name,$today,应用审计报告)
report = union report0,report 
store report to ssdb by ssdb0 with zts_audit_report


##############################################################################下面脚本不需要修改##################################################################
#加载图片数据的key
data=load ssdb by ssdb0 with @pics_data
#生成图片
@udf data by doc.generate_pic with @id
#生成模板,result表返回的是是否成功生成模板，result表有两列，一列是status，一列是errMessage，status为1代表成功生成模板,为0代表生成模板失败
result=@udf data by doc.modifiy_doc with (@id,@base,@var_data,@tbs_data,@report_name)

store result to ssdb by ssdb0 with zts:result


#生成在线文档
html = @udf doc.word2html with @report_name
#页面提示
ret = assert not_have_error() as alert to 报告生成完成! with 报告生成发现错误!

if $ret with """
#保存
b = add status with ('报告生成完毕')
b = @udf b by CRUD.save_table with (@link,@table)
assert b by df.index[0] >0  as notice to @report_name 报告生成完毕! with @report_name 报告生成发现错误!
assert b by df.index[0] >0  as alert to 报告生成完成! with 报告生成发现错误!
""" else """
b = add status with ('报告生成出错')
b = @udf b by CRUD.save_table with (@link,@table)
assert True  as notice to @report_name 报告生成出错! with @report_name 报告生成发现错误!
"""

push b as table

#清理工作区
clear @FID

