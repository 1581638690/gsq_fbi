#/bin/python
# -*- coding: utf-8 -*-
"""
和ip处理相关的函数，可以处理 ipv4 和ipv6
"""
from  avenger.fsys  import b64
from driver.pyssdb import Client
#from pandas import json_normalize
import pandas as pd
import numpy as np
from numpy import nan
import sys
from datetime import datetime ,timedelta
import math
import re
import time
import random
import json
import ipaddress
import socket
try:
    from lxml import etree
except:
    etree=None



__workSpace="../workspace/"
sys.path.append("./lib")
sys.path.append("../")


def is_private(df,p=""):
    """
    @author： gjw
    @date: 20180906
    @函数：根据列判断是不是私有地址，会增加is_private列
    @参数：
    列名
    @描述：
    根据列判断是不是私有地址，会增加is_private列
    @返回：
    df表
    """
    def ip_is_private(x):
        ip = ipaddress.ip_address(x)
        return ip.is_private

    df["is_private"] = df[p.strip()].apply(ip_is_private)
    return df

def subnet24(df,p=""):
    """
    @author： gjw
    @date: 20180906
    @函数：根据列新增一个所属子网的列(24位)，192.168.0.0,10.68.128.0
    @参数：
    列名
    @描述：
    根据列新增一个所属子网的列(24位)，192.168.0.0,10.68.128.0
    @返回：
    df表
    """
    def __subnet24(x):
        net = ipaddress.ip_network(x+"/24",strict=False)
        return net.network_address.__str__()

    df["subnet24"] = df[p.strip()].apply(__subnet24)
    df["%s_n24"%(p.strip())] = df[p.strip()].apply(__subnet24)
    return df

def subnet16(df,p=""):
    """
    @author： gjw
    @date: 20180906
    @函数：根据列新增一个所属子网的列(16位)192.168.x.x,10.68.x.x
    @参数：
    列名
    @描述：
    根据列新增一个所属子网的列(16位)192.168.x.x,10.68.x.x
    @返回：
    df表
    """
    def __subnet16(x):
        net = ipaddress.ip_network(x+"/16",strict=False)
        return net.network_address.__str__()

    df["%s_n16"%(p.strip())] = df[p.strip()].apply(__subnet16)
    return df

#
###连接ssdb链接
def db_conn(server="127.0.0.1",port=8888):
    conn = Client(server,port)
    return conn
#建立数据链接 返回key的字符串
def get_ssdb_data1(key):
    conn=db_conn()
    a=conn.get(b64(key))
    if a:
        b=json.loads(a)
    else:
        b={}
    return b







def net_area1(df,p=""):
    """
    :param df:
    :param p:
    :return: df2或nip_false
    @df2:match_net返回值
    @nip_false:IP地址段为空返回
    @total_ip:ip列表
    @wd_list:json数据ip段
    @ip_seg_list：用于存放转化为INT值的ip地址段，二维数组
    """
   #
    try:
        dict1 = get_ssdb_data1("json_wdgl")
        total_ip=df[p.strip()].tolist()
        if total_ip == []:
            return df
        wd_list = dict1["wd_table"]
        ip_seg_list = []
        if wd_list != []:
            for wd in wd_list:
                nstar_list = []  #
                start_list = []
                end_list = []
                ip_segment = wd["wd"]
                seg_list = ip_segment.split(".")
                for seg in seg_list:
                    if "-" in seg:
                        seg1 = seg.split("-")
                        start_list.append(seg1[0])
                        end_list.append(seg1[1])
                    elif "*" == seg:
                        start_list.append("0")
                        end_list.append("255")
                    elif "0" == seg:
                        start_list.append("0")
                        end_list.append("255")
                    else:
                        start_list.append(seg)
                        end_list.append(seg)
                if start_list != [] and end_list != []:
                    start_str = ".".join(start_list)
                    end_str = ".".join(end_list)
                    #add by 2023-04-01 使用socket来替代IPy这个比较慢的函数
                    try:
                        start_int = int.from_bytes(socket.inet_aton(start_str), byteorder='big')
                        end_int = int.from_bytes(socket.inet_aton(end_str), byteorder='big')
                    except:
                        start_int = int(ipaddress.IPv6Address(start_str))
                        end_int = int(ipaddress.IPv6Address(end_str))
                    sub_count = end_int - start_int
                    nstar_list.append(start_int)
                    nstar_list.append(end_int)
                    nstar_list.append(sub_count)
                    nstar_list.append(wd["wd1_name"])
                    nstar_list.append(wd["wd2_name"])
                    nstar_list.append(wd["wd3_name"])
                    nstar_list.append(wd["wd"])
                    #2022/11/10  add by rzc 更改yn字段
                    if wd["yn"] == "false":
                        yn = False
                        nstar_list.append(yn)
                    elif wd["yn"] == "true":
                        yn = True
                        nstar_list.append(yn)
                    ip_seg_list.append(nstar_list)
            df2=match_net1(ip_seg_list,total_ip)
            df2 = df2.fillna("")
            return df2
        else:
            ip_false={}
            ip_false["ip"]=total_ip
            nip_false=pd.DataFrame(data=ip_false,columns=["ip","wd","net1","net2","net3","yn"])
            nip_false["yn"]=False
            nip_false=nip_false.fillna("")
            return nip_false
    except Exception as e:
        raise e

def net_area(df,p=""):
    """
    #无wd
    :param df:
    :param p:
    :return: df2或nip_false
    @df2:match_net返回值
    @nip_false:IP地址段为空返回
    @total_ip:ip列表
    @wd_list:json数据ip段
    @ip_seg_list：用于存放转化为INT值的ip地址段，二维数组
    #同样的数据，三个模块的用时
    IPy：0.0777
    ipaddress：0.0428
    socket：0.0039
    """
    #dict1=get_ssdb_data1("json_wdgl")
    try:
        # dict1 = {"wd_table":
        #     [
        #         {"wd": "62.6.*.*", "wd1_name": "内部网C段", "wd2_name": "", "wd3_name": "", "yn": "true"},
        #         {"wd": "168.*.*.*", "wd1_name": "内部网C段", "wd2_name": "", "wd3_name": "", "yn": "true"},
        #         {"wd": "208.*.*.*", "wd1_name": "内部网C段", "wd2_name": "", "wd3_name": "", "yn": "true"},
        #         {"wd": "74.*.*.*", "wd1_name": "内部网C段", "wd2_name": "", "wd3_name": "", "yn": "true"},
        #         {"wd": "172.217.*.*", "wd1_name": "内部网C段", "wd2_name": "", "wd3_name": "", "yn": "true"},
        #     ]}
        dict1 = get_ssdb_data1("json_wdgl")
        total_ip=df[p.strip()].tolist()
        if total_ip == []:
            return df
        wd_list = dict1["wd_table"]
        ip_seg_list = []
        if wd_list != []:
            for wd in wd_list:
                nstar_list = []  #
                start_list = []
                end_list = []
                ip_segment = wd["wd"]
                seg_list = ip_segment.split(".")
                for seg in seg_list:
                    if "-" in seg:
                        seg1 = seg.split("-")
                        start_list.append(seg1[0])
                        end_list.append(seg1[1])
                    elif "*" == seg:
                        start_list.append("0")
                        end_list.append("255")
                    elif "0" == seg:
                        start_list.append("0")
                        end_list.append("255")
                    else:
                        start_list.append(seg)
                        end_list.append(seg)
                if start_list != [] and end_list != []:
                    start_str = ".".join(start_list)
                    end_str = ".".join(end_list)
                    #start_int = IPy.IP(start_str).int()
                    #end_int = IPy.IP(end_str).int()
                    # add by 2023-04-01 使用socket来替代IPy这个比较慢的函数
                    try:
                        start_int = int.from_bytes(socket.inet_aton(start_str), byteorder='big')
                        end_int = int.from_bytes(socket.inet_aton(end_str), byteorder='big')
                    except:
                        start_int =int(ipaddress.IPv6Address(start_str))
                        end_int=int(ipaddress.IPv6Address(end_str))
                    sub_count = end_int - start_int
                    nstar_list.append(start_int)
                    nstar_list.append(end_int)
                    nstar_list.append(sub_count)
                    nstar_list.append(wd["wd1_name"])
                    nstar_list.append(wd["wd2_name"])
                    nstar_list.append(wd["wd3_name"])
                    nstar_list.append(wd["wd"])
                    #2022/11/10 add by rzc
                    if wd["yn"] == "false":
                        yn = False
                        nstar_list.append(yn)
                    elif wd["yn"] == "true":
                        yn = True
                        nstar_list.append(yn)
                    ip_seg_list.append(nstar_list)
            df2=match_net1(ip_seg_list,total_ip)
            df2=df2.fillna("")
            del df2["wd"]
            return df2
        else:
            ip_false={}
            ip_false["ip"]=total_ip
            nip_false=pd.DataFrame(data=ip_false,columns=["ip","wd","net1","net2","net3","yn"])
            nip_false["yn"]=False
            nip_false=nip_false.fillna("")
            del nip_false["wd"]
            return nip_false
    except Exception as e:
        raise e

def match_net1(ip_seg_list,total_ip):
    """
    :param ip_seg_list: IP段的二维数组
    :param p: 匹配的ip列表
    :return:
    @ip_list_df:ip列表存为dataFrame
    @unique_df:排序，删除重复，用于存放总数据（匹配到的，未匹配到的）
    @con_df：每个ip地址匹配到的IP段，返回dataframe
    @nmatch_df:未匹配到ip地址
    """
    #338288524927261089654163772891438416537
    total_df = pd.DataFrame(data=[[0, 0, 0, 0, 0, 0, 0, False]],
                            columns=["ip", "ip_int", "count", "net1", "net2", "net3", "wd", "yn"])
    ip_int_list=[]
    for ip in total_ip:
        try:
            a=int.from_bytes(socket.inet_aton(ip), byteorder='big')
            ip_int_list.append(a)
        except:
            a=int(ipaddress.IPv6Address(ip))
            #print(a)
            ip_int_list.append(a)
    ip_list_df=pd.DataFrame(data={"ip":total_ip,"ip_int":ip_int_list},columns=["ip","ip_int","count", "net1", "net2", "net3", "wd","yn"])
    ip_list_df["yn"]=False
    for ip_duan in ip_seg_list:
        con_df=ip_list_df[(ip_duan[0]<=ip_list_df["ip_int"]) & (ip_duan[1]>=ip_list_df["ip_int"])]
        if con_df.empty==True:
            continue
        else:
            con_df["count"]=ip_duan[2]
            con_df["net1"]=ip_duan[3]
            con_df["net2"] = ip_duan[4]
            con_df["net3"] = ip_duan[5]
            con_df["wd"] = ip_duan[6]
            # add by rzc 2022/11/10
            con_df["yn"]=ip_duan[7]
            total_df = total_df._append(con_df, ignore_index=True)
    total_df = total_df.drop(0)
    match_ip_list = total_df["ip"].tolist()
    if match_ip_list!=[]:
        match_df = total_df.sort_values(by='count', ascending=True)
        unique_df = match_df.drop(match_df[match_df.ip.duplicated()].index, inplace=False)
        nmatch_ip = {}
        nmatch_ip["ip"] = []
        ip_list = ip_list_df["ip"].tolist()

        for ip in ip_list:
            if ip not in match_ip_list:
                nmatch_ip["ip"].append(ip)
        nmatch_df = pd.DataFrame(data=nmatch_ip, columns=["ip", "wd", "net1", "net2", "net3", "yn"])
        nmatch_df["yn"] = False
        unique_df = unique_df._append(nmatch_df)
        del unique_df["count"]
        del unique_df["ip_int"]
        return unique_df
    else:
        del ip_list_df["ip_int"]
        del ip_list_df["count"]
        return ip_list_df

def repeat(df,p=""):
    df_ip = df["ip"].str.split(",", expand=True)
    # 将行转化为列
    df_ip = df_ip.stack()
    # 重置索引
    df_ip = df_ip.reset_index(level=1, drop=True)  # 这个是series无法进行与dataframe进行合并
    # 跟原始的进行join操作
    df_ip.name = "ip"
    df.rename(columns={"ip": "ip2"}, inplace=True)
    df_new = df.join(df_ip)
    df = net_area(df_new, "ip")

    df1 = pd.merge(df_new, df, how="inner", on="ip")
    #进行排序
    df1=df1.sort_values("yn",ascending=False)
    #根据id和ip进行去重
    df1.drop_duplicates(["ip2","id"],keep="first",inplace=True)
    df1.drop(columns=["ip"],inplace=True)
    df1.rename(columns={"ip2":"ip"},inplace=True)
    return df1





if __name__ == '__main__':

    json_ip = [{"id":1,"ip":"112.65.195.164,140.207.122.206,101.226.94.124,140.207.122.242,140.207.122.197"},{"id":2,"ip":"10.100.40.250"},{"id":3,"ip":"157.148.59.239"},{"id":4,"ip":"184.26.43.82,23.192.47.8,184.26.43.73,23.192.46.251,23.220.70.165,23.220.73.185,23.46.155.153,23.220.73.196,23.220.70.142"},{"id":5,"ip":"101.91.37.39,117.89.176.31,182.50.15.211,112.65.193.167,221.181.99.30,140.207.56.109,101.91.37.29,140.207.56.26,182.50.15.148,101.227.131.222,221.181.99.34,182.50.10.149,182.50.10.140,112.65.193.155"},{"id":6,"ip":"117.89.176.67,36.155.182.57,112.65.193.167,182.50.15.211,101.91.37.29,140.207.56.109,140.207.56.26,182.50.15.148,221.181.99.34,182.50.10.149,182.50.10.140,112.65.193.155"},{"id":7,"ip":"140.207.56.26"},{"id":8,"ip":"112.65.193.167"},{"id":9,"ip":"157.148.61.240"},{"id":10,"ip":"42.187.184.232"},{"id":11,"ip":"116.162.164.37,116.162.164.86,112.80.129.21,116.162.164.88,112.80.129.63,112.80.129.69,112.80.129.23,116.162.164.87,112.80.129.74,116.162.164.91,116.162.164.31,112.80.129.34,116.162.164.40,116.162.164.34,116.162.164.202,116.162.164.30"},{"id":12,"ip":"119.167.131.86,119.167.131.94,119.167.131.89,119.167.131.96,119.167.131.92,119.167.131.41,119.167.131.84"},{"id":13,"ip":"180.163.237.29"},{"id":14,"ip":"104.192.108.23,101.198.192.8"},{"id":15,"ip":"221.15.68.52,221.15.68.50"},{"id":16,"ip":"222.141.4.41"},{"id":17,"ip":"111.206.209.166,111.206.208.72"},{"id":18,"ip":"61.163.9.154,61.163.9.159,103.198.200.201,103.198.200.199,106.117.218.67"},{"id":19,"ip":"111.30.159.178"},{"id":20,"ip":"218.29.205.212"},{"id":21,"ip":"140.206.164.148"},{"id":22,"ip":"218.29.205.183"},{"id":23,"ip":"218.29.205.218"},{"id":24,"ip":"222.141.28.61"},{"id":25,"ip":"218.29.205.189"},{"id":26,"ip":"120.52.183.167"},{"id":27,"ip":"218.29.205.252"},{"id":28,"ip":"218.29.205.187,123.12.213.201"},{"id":29,"ip":"157.255.191.75"},{"id":30,"ip":"61.163.9.160"},{"id":31,"ip":"124.165.126.224,124.165.126.244,124.165.126.222,124.165.126.223,124.165.126.219,124.165.126.220"},{"id":32,"ip":"157.148.61.213,120.241.131.99,157.148.59.239,157.255.191.75"},{"id":33,"ip":"fe80:0000:0000:0000:050d:f0be:d91f:ea39"},{"id":34,"ip":"fe80:0000:0000:0000:dd19:1876:e416:80aa"},{"id":35,"ip":"fe80:0000:0000:0000:83d8:9612:1fb9:02f1"},{"id":36,"ip":"fe80:0000:0000:0000:62ed:0686:3b50:1c88"},{"id":37,"ip":"fe80:0000:0000:0000:9449:f9bd:f4b3:f870"},{"id":38,"ip":"fe80:0000:0000:0000:8c12:46c0:9c91:a3a5"},{"id":39,"ip":"fe80:0000:0000:0000:ed6a:8bfd:8502:59f1"},{"id":40,"ip":"13.107.6.158"},{"id":41,"ip":"157.148.62.140"},{"id":42,"ip":"222.143.140.113,221.15.67.89,42.231.136.104,42.231.136.83,61.163.203.110"},{"id":43,"ip":"104.192.109.61"},{"id":44,"ip":"111.206.170.195,61.240.129.35,171.8.167.89"},{"id":45,"ip":"112.65.195.164"},{"id":46,"ip":"125.39.196.203,125.39.104.15,42.187.184.49,42.187.184.232,101.226.211.106,42.187.131.126,43.130.30.237,109.244.169.236"},{"id":47,"ip":"112.64.235.14"},{"id":48,"ip":"220.196.148.28,220.196.148.23"},{"id":49,"ip":"104.192.108.21"},{"id":50,"ip":"182.50.15.211"},{"id":51,"ip":"10.99.40.235"},{"id":52,"ip":"218.28.172.4"},{"id":53,"ip":"157.148.59.240"},{"id":54,"ip":"119.28.109.132,220.249.46.33,61.135.158.47,220.249.46.34"},{"id":55,"ip":"157.148.61.213,157.255.209.247,157.255.191.46,120.232.51.154,157.148.59.239,183.47.121.90,157.255.191.75,157.255.209.248,43.155.124.238,157.148.59.240,157.148.62.201,157.148.62.140,157.148.61.240"},{"id":56,"ip":"220.249.46.39,39.156.165.39,39.156.166.50,220.249.46.40"},{"id":57,"ip":"61.54.7.118,61.54.7.115,61.54.91.190"},{"id":58,"ip":"123.6.48.99,36.99.170.92"},{"id":59,"ip":"104.192.108.22,104.192.110.245"},{"id":60,"ip":"180.163.237.76"},{"id":61,"ip":"221.130.200.46"},{"id":62,"ip":"122.96.96.144"},{"id":63,"ip":"220.194.118.239"},{"id":64,"ip":"10.100.30.17"},{"id":65,"ip":"119.167.131.37"},{"id":66,"ip":"119.167.131.94"},{"id":67,"ip":"172.18.18.18"},{"id":68,"ip":"119.167.131.93"},{"id":69,"ip":"157.255.5.210"},{"id":70,"ip":"61.135.158.38,39.156.166.50"},{"id":71,"ip":"119.167.131.46"},{"id":72,"ip":"119.167.131.41"},{"id":73,"ip":"119.167.131.85"},{"id":74,"ip":"119.167.131.91"},{"id":75,"ip":"119.167.131.97"},{"id":76,"ip":"119.167.131.175"},{"id":77,"ip":"119.167.131.87"},{"id":78,"ip":"119.167.131.92"},{"id":79,"ip":"222.141.28.77"},{"id":80,"ip":"119.167.131.86"},{"id":81,"ip":"119.167.131.90"},{"id":82,"ip":"116.153.74.83,42.177.90.12,116.153.74.85,116.153.74.149"},{"id":83,"ip":"59.82.113.248"},{"id":84,"ip":"112.65.193.155"},{"id":85,"ip":"59.82.34.255"},{"id":86,"ip":"157.255.191.46"},{"id":87,"ip":"182.50.10.140"},{"id":88,"ip":"101.226.211.106"},{"id":89,"ip":"59.82.14.1,59.82.113.142,59.82.34.255,59.82.113.117"},{"id":90,"ip":"101.91.37.29"},{"id":91,"ip":"101.91.37.39"},{"id":92,"ip":"123.125.109.246,61.135.159.218,39.156.165.34,39.156.165.32,39.156.165.33"},{"id":93,"ip":"121.36.106.50"},{"id":94,"ip":"157.148.48.170"},{"id":95,"ip":"39.156.85.200"},{"id":96,"ip":"140.207.122.206"},{"id":97,"ip":"140.207.56.109"},{"id":98,"ip":"221.181.99.30"},{"id":99,"ip":"42.187.131.126"},{"id":100,"ip":"101.227.131.222"},{"id":101,"ip":"157.148.61.213"},{"id":102,"ip":"182.50.10.149"},{"id":103,"ip":"203.209.245.158"},{"id":104,"ip":"203.209.250.114,110.76.8.150,203.209.251.147"},{"id":105,"ip":"39.156.165.34"},{"id":106,"ip":"157.255.209.248"},{"id":107,"ip":"59.82.14.1"},{"id":108,"ip":"220.194.118.203"},{"id":109,"ip":"157.148.48.247,157.148.57.58,157.148.48.170"},{"id":110,"ip":"180.163.251.137"},{"id":111,"ip":"180.163.242.131"},{"id":112,"ip":"104.192.108.22,104.192.108.23"},{"id":113,"ip":"153.99.77.59,114.112.216.178"},{"id":114,"ip":"42.236.24.28,210.52.217.135,111.7.68.159,111.7.68.147"},{"id":115,"ip":"110.43.89.7"},{"id":116,"ip":"157.148.48.247"},{"id":117,"ip":"42.177.90.31,42.177.90.32,42.177.90.33,116.153.74.149,42.177.90.14,116.153.74.83"},{"id":118,"ip":"221.181.99.34"},{"id":119,"ip":"110.43.81.41,120.52.183.173"},{"id":120,"ip":"123.6.34.202,123.6.34.201"},{"id":121,"ip":"172.16.16.243"},{"id":122,"ip":"43.155.124.238"},{"id":123,"ip":"114.250.64.2"},{"id":124,"ip":"110.43.89.5"},{"id":125,"ip":"59.82.14.113"},{"id":126,"ip":"59.82.31.137"},{"id":127,"ip":"101.199.128.228,104.192.108.157,104.192.108.156,180.163.222.173"},{"id":128,"ip":"220.194.118.198"},{"id":129,"ip":"114.250.63.2"},{"id":130,"ip":"192.168.101.20"},{"id":131,"ip":"157.148.57.58"},{"id":132,"ip":"114.250.67.2"},{"id":133,"ip":"157.148.63.122,157.255.5.146,157.148.45.245,157.148.41.150,157.148.63.118,157.255.4.29,157.148.54.204"},{"id":134,"ip":"122.96.96.252"},{"id":135,"ip":"110.249.194.68,110.249.194.78,124.236.26.161,124.236.26.172,110.249.194.71,124.236.26.167,124.236.26.168,110.249.194.67"},{"id":136,"ip":"60.29.242.225"},{"id":137,"ip":"10.100.50.8"},{"id":138,"ip":"42.236.45.85"},{"id":139,"ip":"180.163.235.139"},{"id":140,"ip":"36.110.235.8"},{"id":141,"ip":"10.100.30.24"},{"id":142,"ip":"10.100.30.22"},{"id":143,"ip":"10.100.30.47"},{"id":144,"ip":"10.100.30.66"},{"id":145,"ip":"109.244.169.236"},{"id":146,"ip":"10.100.30.15"},{"id":147,"ip":"140.207.122.197"},{"id":148,"ip":"103.28.8.36,1.192.137.29"},{"id":149,"ip":"45.253.144.134,45.253.197.66"},{"id":150,"ip":"220.194.81.125"},{"id":151,"ip":"152.199.38.90"},{"id":152,"ip":"157.255.173.211"},{"id":153,"ip":"114.250.68.4"},{"id":154,"ip":"10.100.30.26"},{"id":155,"ip":"182.118.37.170"},{"id":156,"ip":"152.195.38.76"},{"id":157,"ip":"120.52.183.190,120.131.3.164"},{"id":158,"ip":"120.131.3.40"},{"id":159,"ip":"121.41.37.143"},{"id":160,"ip":"140.249.63.92,119.249.103.192"},{"id":161,"ip":"119.36.62.16,119.167.168.72,42.236.76.241"},{"id":162,"ip":"140.249.254.142,119.167.149.221"},{"id":163,"ip":"140.207.176.101,111.206.148.116"},{"id":164,"ip":"180.163.246.68"},{"id":165,"ip":"121.228.177.103"},{"id":166,"ip":"111.202.1.119"},{"id":167,"ip":"47.101.179.215"},{"id":168,"ip":"111.206.174.176"},{"id":169,"ip":"60.28.172.238"},{"id":170,"ip":"61.54.89.74"},{"id":171,"ip":"157.255.4.226"},{"id":172,"ip":"110.43.89.5"},{"id":173,"ip":"120.232.51.154"},{"id":174,"ip":"110.43.89.23"},{"id":175,"ip":"220.194.81.56"},{"id":176,"ip":"119.28.109.132,220.249.46.33"},{"id":177,"ip":"91.189.91.49,91.189.91.48,35.224.170.84,185.125.190.49,185.125.190.17"},{"id":178,"ip":"120.52.183.175"},{"id":179,"ip":"36.110.213.160,101.199.254.108"},{"id":180,"ip":"1.192.137.108"},{"id":181,"ip":"120.52.183.150"},{"id":182,"ip":"125.39.216.184,151.101.2.133"},{"id":183,"ip":"61.163.173.79,61.163.173.80"},{"id":184,"ip":"120.131.3.164"},{"id":185,"ip":"121.37.232.36"},{"id":186,"ip":"123.6.52.215,123.6.52.214"},{"id":187,"ip":"182.50.15.148"},{"id":188,"ip":"140.207.122.242"},{"id":189,"ip":"218.29.205.181"},{"id":190,"ip":"203.119.169.38,203.119.175.226"},{"id":191,"ip":"218.29.205.217"},{"id":192,"ip":"218.29.205.215"},{"id":193,"ip":"120.52.183.147"},{"id":194,"ip":"203.107.1.35"},{"id":195,"ip":"116.181.3.214"},{"id":196,"ip":"110.43.89.7"},{"id":197,"ip":"114.80.99.87"},{"id":198,"ip":"120.92.33.171"},{"id":199,"ip":"123.6.52.215,123.6.52.214"},{"id":200,"ip":"115.54.20.38"},{"id":201,"ip":"123.60.28.199"},{"id":202,"ip":"112.85.70.74"},{"id":203,"ip":"121.37.163.170"},{"id":204,"ip":"124.70.129.77"},{"id":205,"ip":"120.233.177.155,123.6.111.103,61.163.9.156"},{"id":206,"ip":"10.99.40.100"},{"id":207,"ip":"220.249.46.40"},{"id":208,"ip":"58.19.21.99"},{"id":209,"ip":"120.92.32.61"},{"id":210,"ip":"42.186.194.77"},{"id":211,"ip":"180.163.237.175,221.130.200.175"},{"id":212,"ip":"125.39.196.203"},{"id":213,"ip":"39.97.197.232"},{"id":214,"ip":"220.194.81.100"},{"id":215,"ip":"121.36.50.4"},{"id":216,"ip":"152.195.38.76"},{"id":217,"ip":"103.198.200.1"},{"id":218,"ip":"120.131.3.164"},{"id":219,"ip":"123.6.52.214"},{"id":220,"ip":"103.198.200.1,123.6.13.6"},{"id":221,"ip":"101.199.252.130,101.198.2.223"},{"id":222,"ip":"119.29.29.29"},{"id":223,"ip":"120.92.84.16"},{"id":224,"ip":"220.196.141.73"},{"id":225,"ip":"119.36.62.16"},{"id":226,"ip":"119.28.109.132"},{"id":227,"ip":"61.54.89.74"},{"id":228,"ip":"140.207.176.55"},{"id":229,"ip":"112.194.67.242,125.39.216.187,218.60.19.203"},{"id":230,"ip":"125.39.104.15"},{"id":231,"ip":"61.54.7.120,61.54.7.117"},{"id":232,"ip":"123.6.52.214,61.53.180.132"},{"id":233,"ip":"121.199.251.28"},{"id":234,"ip":"101.201.233.121"},{"id":235,"ip":"172.16.16.136"},{"id":236,"ip":"123.125.243.170"},{"id":237,"ip":"61.54.7.112"},{"id":238,"ip":"139.9.45.223"},{"id":239,"ip":"121.37.247.153"},{"id":240,"ip":"123.125.243.174"},{"id":241,"ip":"123.125.243.135"},{"id":242,"ip":"183.47.121.90"},{"id":243,"ip":"120.52.190.34"},{"id":244,"ip":"114.116.229.89"},{"id":245,"ip":"121.36.109.157"},{"id":246,"ip":"123.6.111.103"},{"id":247,"ip":"119.167.188.179"},{"id":248,"ip":"120.131.3.164"},{"id":249,"ip":"49.234.10.185"},{"id":250,"ip":"222.143.140.32"},{"id":251,"ip":"220.194.81.75,220.194.117.209"},{"id":252,"ip":"123.6.52.215"},{"id":253,"ip":"42.231.136.215,123.12.213.102"},{"id":254,"ip":"106.15.163.128"},{"id":255,"ip":"39.100.97.3"},{"id":256,"ip":"211.94.108.244"},{"id":257,"ip":"168.235.205.6"},{"id":258,"ip":"59.82.113.35"},{"id":259,"ip":"59.82.112.194"},{"id":260,"ip":"23.42.176.114,23.42.165.170"},{"id":261,"ip":"123.6.8.171,123.6.8.169"},{"id":262,"ip":"18.155.202.107"},{"id":263,"ip":"34.107.221.82"},{"id":264,"ip":"154.8.165.62"},{"id":265,"ip":"120.131.3.164"},{"id":266,"ip":"111.202.89.112"},{"id":267,"ip":"219.141.240.182"},{"id":268,"ip":"101.198.2.153"},{"id":269,"ip":"212.64.63.174"},{"id":270,"ip":"106.55.217.194"},{"id":271,"ip":"20.231.121.79"},{"id":272,"ip":"1.192.194.147"},{"id":273,"ip":"1.192.137.28"},{"id":274,"ip":"123.6.22.194"},{"id":275,"ip":"61.133.64.5"},{"id":276,"ip":"219.155.150.1,115.54.19.7,123.6.106.1,123.6.13.6,115.54.19.6"},{"id":277,"ip":"10.100.30.1"},{"id":278,"ip":"111.202.0.249"},{"id":279,"ip":"203.107.1.65"},{"id":280,"ip":"123.125.103.221"},{"id":281,"ip":"123.125.103.221"},{"id":282,"ip":"125.39.135.225"},{"id":283,"ip":"210.74.41.123"},{"id":284,"ip":"151.101.2.133"},{"id":285,"ip":"139.9.39.206"},{"id":286,"ip":"120.92.114.92"},{"id":287,"ip":"113.201.153.41"},{"id":288,"ip":"61.240.128.227"},{"id":289,"ip":"123.6.18.232"},{"id":290,"ip":"119.36.62.12"},{"id":291,"ip":"204.79.197.203"},{"id":292,"ip":"116.132.235.196"},{"id":293,"ip":"106.14.92.120"},{"id":294,"ip":"123.6.18.183"},{"id":295,"ip":"120.52.183.190,120.131.3.164"},{"id":296,"ip":"202.108.22.5"},{"id":297,"ip":"123.6.28.49"},{"id":298,"ip":"119.36.164.36"},{"id":299,"ip":"113.201.153.38"},{"id":300,"ip":"111.202.0.148"},{"id":301,"ip":"42.236.72.248"},{"id":302,"ip":"60.29.242.245"},{"id":303,"ip":"42.228.58.181"},{"id":304,"ip":"104.250.33.100"},{"id":305,"ip":"59.82.60.60,59.82.31.99"},{"id":306,"ip":"39.106.188.189"},{"id":307,"ip":"42.236.90.232"},{"id":308,"ip":"116.132.218.191"},{"id":309,"ip":"106.11.43.215"},{"id":310,"ip":"96.7.128.195"},{"id":311,"ip":"184.85.65.32"},{"id":312,"ip":"120.72.35.35"},{"id":313,"ip":"154.8.188.20"},{"id":314,"ip":"42.49.119.182"},{"id":315,"ip":"18.166.251.117"},{"id":316,"ip":"140.207.202.92"},{"id":317,"ip":"101.198.2.196"},{"id":318,"ip":"18.167.2.204"},{"id":319,"ip":"114.55.174.104"},{"id":320,"ip":"122.227.201.1"},{"id":321,"ip":"39.136.176.35"},{"id":322,"ip":"10.99.40.172"},{"id":323,"ip":"1.193.108.153"},{"id":324,"ip":"219.157.200.231"},{"id":325,"ip":"123.125.81.244"},{"id":326,"ip":"111.7.73.24"},{"id":327,"ip":"120.72.35.36"},{"id":328,"ip":"116.132.235.228"},{"id":329,"ip":"112.86.240.82"},{"id":330,"ip":"175.102.19.171"},{"id":331,"ip":"61.54.7.127"},{"id":332,"ip":"110.242.68.3"},{"id":333,"ip":"106.75.80.249"},{"id":334,"ip":"111.166.20.25"},{"id":335,"ip":"123.125.81.244"},{"id":336,"ip":"120.131.3.164"},{"id":337,"ip":"119.167.131.89"},{"id":338,"ip":"116.171.16.47"},{"id":339,"ip":"218.28.104.170"},{"id":340,"ip":"121.40.99.129"},{"id":341,"ip":"123.6.52.214"},{"id":342,"ip":"115.54.20.37"},{"id":343,"ip":"118.183.45.65"},{"id":344,"ip":"101.199.254.71"},{"id":345,"ip":"111.206.126.251"},{"id":346,"ip":"222.138.9.14"},{"id":347,"ip":"23.32.248.32"},{"id":348,"ip":"10.100.30.10"},{"id":349,"ip":"203.107.1.2"},{"id":350,"ip":"116.132.223.51"},{"id":351,"ip":"218.12.76.171"},{"id":352,"ip":"42.186.111.93"},{"id":353,"ip":"203.119.169.129"},{"id":354,"ip":"110.43.89.210"},{"id":355,"ip":"121.36.50.4"},{"id":356,"ip":"222.143.52.106"},{"id":357,"ip":"219.157.200.224"},{"id":358,"ip":"119.167.131.38"},{"id":359,"ip":"59.82.112.61"},{"id":360,"ip":"119.167.131.95"},{"id":361,"ip":"39.97.130.51"},{"id":362,"ip":"172.64.155.188"},{"id":363,"ip":"111.7.164.76"},{"id":364,"ip":"112.17.3.69"},{"id":365,"ip":"123.6.74.105"},{"id":366,"ip":"211.91.241.249"},{"id":367,"ip":"47.104.29.164"},{"id":368,"ip":"23.77.215.147"},{"id":369,"ip":"fe80:0000:0000:0000:4bb5:7c92:3f8d:3b58"},{"id":370,"ip":"10.100.30.29"},{"id":371,"ip":"103.45.72.15"},{"id":372,"ip":"182.118.16.199"},{"id":373,"ip":"221.14.179.137"},{"id":374,"ip":"125.39.196.203"},{"id":375,"ip":"61.54.7.117"},{"id":376,"ip":"61.54.91.146"},{"id":377,"ip":"153.36.236.182"},{"id":378,"ip":"211.91.76.183"},{"id":379,"ip":"157.255.196.25"},{"id":380,"ip":"112.64.218.125"},{"id":381,"ip":"146.196.69.45"},{"id":382,"ip":"112.80.128.82"},{"id":383,"ip":"123.6.30.228"},{"id":384,"ip":"114.250.63.5"},{"id":385,"ip":"223.166.152.124"},{"id":386,"ip":"61.54.91.204"},{"id":387,"ip":"101.28.132.10"},{"id":388,"ip":"119.29.29.98"},{"id":389,"ip":"61.240.228.200"},{"id":390,"ip":"81.69.116.102"},{"id":391,"ip":"220.196.148.100"},{"id":392,"ip":"81.69.154.125"},{"id":393,"ip":"114.250.65.3"},{"id":394,"ip":"101.199.254.4"},{"id":395,"ip":"61.54.91.190"},{"id":396,"ip":"114.250.68.3"},{"id":397,"ip":"45.65.23.16"},{"id":398,"ip":"61.163.111.141"},{"id":399,"ip":"152.195.38.76"},{"id":400,"ip":"157.148.50.148"},{"id":401,"ip":"111.206.137.120"},{"id":402,"ip":"61.54.7.128"},{"id":403,"ip":"111.206.209.119"},{"id":404,"ip":"61.135.158.47"},{"id":405,"ip":"112.65.208.109"},{"id":406,"ip":"112.64.200.152"},{"id":407,"ip":"42.236.8.94"},{"id":408,"ip":"123.6.8.177"},{"id":409,"ip":"123.58.104.139"},{"id":410,"ip":"182.50.10.49"},{"id":411,"ip":"27.221.71.160"},{"id":412,"ip":"23.46.155.132"},{"id":413,"ip":"157.255.196.77"},{"id":414,"ip":"123.6.97.55"},{"id":415,"ip":"27.44.120.245"},{"id":416,"ip":"157.148.50.121"},{"id":417,"ip":"116.128.134.194"},{"id":418,"ip":"27.44.120.244"},{"id":419,"ip":"112.65.208.79"},{"id":420,"ip":"124.95.173.183"},{"id":421,"ip":"183.47.118.145"},{"id":422,"ip":"111.206.209.167"},{"id":423,"ip":"119.36.164.35"},{"id":424,"ip":"203.208.50.66"},{"id":425,"ip":"125.44.162.222"},{"id":426,"ip":"114.110.97.97"},{"id":427,"ip":"45.120.103.139"},{"id":428,"ip":"222.141.28.66"},{"id":429,"ip":"61.54.91.188"},{"id":430,"ip":"120.52.183.166"},{"id":431,"ip":"111.206.186.216"},{"id":432,"ip":"60.28.215.54"},{"id":433,"ip":"116.130.228.247"},{"id":434,"ip":"125.39.165.183"},{"id":435,"ip":"60.29.239.189"},{"id":436,"ip":"61.54.7.115"},{"id":437,"ip":"203.107.1.34"},{"id":438,"ip":"157.148.42.198"},{"id":439,"ip":"153.35.100.16"},{"id":440,"ip":"42.56.88.30"},{"id":441,"ip":"115.56.90.110"},{"id":442,"ip":"218.24.84.215"},{"id":443,"ip":"42.228.58.182"},{"id":444,"ip":"43.255.226.106"},{"id":445,"ip":"123.207.105.156"},{"id":446,"ip":"203.107.1.66"},{"id":447,"ip":"182.254.116.117"},{"id":448,"ip":"125.39.165.115"},{"id":449,"ip":"220.194.116.104"},{"id":450,"ip":"61.54.7.177"},{"id":451,"ip":"58.254.149.225"},{"id":452,"ip":"42.236.76.244"},{"id":453,"ip":"59.36.89.175"},{"id":454,"ip":"218.29.50.109"},{"id":455,"ip":"1.192.194.144"},{"id":456,"ip":"42.56.88.20"},{"id":457,"ip":"140.206.164.225"},{"id":458,"ip":"125.47.6.162"},{"id":459,"ip":"219.155.151.69"},{"id":460,"ip":"115.58.142.226"},{"id":461,"ip":"219.155.151.75"},{"id":462,"ip":"219.155.151.67"},{"id":463,"ip":"219.155.205.88"},{"id":464,"ip":"61.48.89.249"},{"id":465,"ip":"123.6.21.238"},{"id":466,"ip":"123.6.65.221"},{"id":467,"ip":"10.99.0.200"},{"id":468,"ip":"123.125.102.48"},{"id":469,"ip":"219.157.200.227"},{"id":470,"ip":"123.6.65.221"},{"id":471,"ip":"111.202.0.249"},{"id":472,"ip":"59.82.113.168"},{"id":473,"ip":"119.188.213.192"},{"id":474,"ip":"99.84.50.49"},{"id":475,"ip":"115.58.141.121"},{"id":476,"ip":"42.56.88.25"},{"id":477,"ip":"116.128.134.194"},{"id":478,"ip":"220.194.91.163"},{"id":479,"ip":"172.16.16.115"},{"id":480,"ip":"122.190.65.175"},{"id":481,"ip":"122.190.65.175"},{"id":482,"ip":"122.190.65.189"},{"id":483,"ip":"157.148.54.160"},{"id":484,"ip":"123.126.131.1"},{"id":485,"ip":"61.135.173.130"},{"id":486,"ip":"61.241.138.150"},{"id":487,"ip":"111.202.75.27"},{"id":488,"ip":"222.136.90.20"},{"id":489,"ip":"116.211.198.237"},{"id":490,"ip":"182.117.55.166"},{"id":491,"ip":"122.190.65.153"},{"id":492,"ip":"122.190.65.225"},{"id":493,"ip":"123.129.246.12"},{"id":494,"ip":"115.58.142.36"},{"id":495,"ip":"43.225.85.246"},{"id":496,"ip":"111.202.75.92"},{"id":497,"ip":"122.190.65.225"},{"id":498,"ip":"122.190.65.153"},{"id":499,"ip":"113.207.90.58"},{"id":500,"ip":"123.129.246.14"},{"id":501,"ip":"111.206.70.130"},{"id":502,"ip":"39.107.108.233"},{"id":503,"ip":"111.202.75.173"},{"id":504,"ip":"123.125.84.233"},{"id":505,"ip":"123.6.21.243"},{"id":506,"ip":"111.202.75.154"},{"id":507,"ip":"123.6.8.174"},{"id":508,"ip":"123.6.8.171"},{"id":509,"ip":"218.60.10.17"},{"id":510,"ip":"218.29.205.187"},{"id":511,"ip":"218.29.205.198"},{"id":512,"ip":"39.106.231.51"},{"id":513,"ip":"222.140.23.20"},{"id":514,"ip":"113.207.90.61"},{"id":515,"ip":"125.39.216.189"},{"id":516,"ip":"123.6.8.172"},{"id":517,"ip":"124.165.126.219"},{"id":518,"ip":"113.0.165.22"},{"id":519,"ip":"59.82.113.142"},{"id":520,"ip":"123.6.8.174"},{"id":521,"ip":"123.6.8.170"},{"id":522,"ip":"61.163.173.79"},{"id":523,"ip":"222.136.90.13"},{"id":524,"ip":"101.72.203.41"},{"id":525,"ip":"110.52.117.8"},{"id":526,"ip":"81.70.226.248"},{"id":527,"ip":"123.6.8.169"},{"id":528,"ip":"103.198.200.46"},{"id":529,"ip":"123.6.8.169"},{"id":530,"ip":"123.6.8.170"},{"id":531,"ip":"123.6.8.170"},{"id":532,"ip":"27.221.38.41"},{"id":533,"ip":"182.117.54.174"},{"id":534,"ip":"111.206.70.178"},{"id":535,"ip":"123.125.243.145"},{"id":536,"ip":"39.156.54.66"},{"id":537,"ip":"157.148.62.201"},{"id":538,"ip":"113.207.90.54"},{"id":539,"ip":"123.6.21.244"},{"id":540,"ip":"182.123.211.162"},{"id":541,"ip":"113.207.90.46"},{"id":542,"ip":"101.198.192.8"},{"id":543,"ip":"180.163.251.136"},{"id":544,"ip":"120.233.23.111"},{"id":545,"ip":"101.206.202.227"},{"id":546,"ip":"203.107.1.33"},{"id":547,"ip":"180.76.150.252"},{"id":548,"ip":"124.71.209.131"},{"id":549,"ip":"36.110.213.244"},{"id":550,"ip":"42.177.90.32"},{"id":551,"ip":"112.192.18.32"},{"id":552,"ip":"112.85.70.152"},{"id":553,"ip":"111.166.20.47"},{"id":554,"ip":"139.9.44.129"},{"id":555,"ip":"42.177.90.14"},{"id":556,"ip":"157.255.11.54"},{"id":557,"ip":"42.186.111.91"},{"id":558,"ip":"106.120.160.194"},{"id":559,"ip":"182.118.37.169"},{"id":560,"ip":"10.99.40.201"},{"id":561,"ip":"119.167.131.84"},{"id":562,"ip":"2.22.80.214"},{"id":563,"ip":"35.180.43.213"},{"id":564,"ip":"101.206.202.229"},{"id":565,"ip":"139.129.105.201"},{"id":566,"ip":"10.100.50.1"},{"id":567,"ip":"101.71.33.11"},{"id":568,"ip":"210.44.151.62"},{"id":569,"ip":"180.209.95.9"},{"id":570,"ip":"210.28.130.3"},{"id":571,"ip":"202.201.2.130"},{"id":572,"ip":"111.227.116.1"},{"id":573,"ip":"58.218.65.2"},{"id":574,"ip":"123.56.179.240"},{"id":575,"ip":"123.6.28.48"},{"id":576,"ip":"180.101.212.103"}]
    df = pd.DataFrame(json_ip)
    df1=repeat(df, p="")
    print(df1)
